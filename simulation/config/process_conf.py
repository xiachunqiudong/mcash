import configparser
import sys

config = configparser.ConfigParser()
config.optionxform = str
config.read('mcash_conf.ini')

# generate sv config
sv_conf_list = []
sv_conf_list.append('// This verilog config file is generated by python.')

for section_name in config.sections():
  section = config[section_name]
  sv_conf_list.append(f"// {section_name}")
  for k, v in section.items():
    sv_conf_list.append(f"`define {k} {v}")

# generate c++ config
cpp_conf_list = []
cpp_conf_list.append('// This cpp config file is generated by python.')


for section_name in config.sections():
  section = config[section_name]
  cpp_conf_list.append(f"// {section_name}")
  for k, v in section.items():
    cpp_conf_list.append(f"#define {k} {v}")

if len(sys.argv) != 3:
  print("Usage: python script.py <vcs_include_filename> <cpp_include_filename>")
  sys.exit(1)

sv_conf_filename = sys.argv[1]
cpp_conf_filename = sys.argv[2]

with open(sv_conf_filename, 'w') as f:
  f.writelines(line + '\n' for line in sv_conf_list)

with open(cpp_conf_filename, 'w') as f:
  f.writelines(line + '\n' for line in cpp_conf_list)